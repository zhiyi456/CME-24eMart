"use strict";
// Copyright 2022 Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
exports.__esModule = true;
var enums_1 = require("../../enums");
var createExperienceFrame_1 = __importDefault(require("../createExperienceFrame"));
var _1 = require(".");
var commons_1 = require("../commons");
var createQSearchFrame = function (frameOptions, contentOptions, controlOptions, allExperienceIdentifiers) {
    var url = frameOptions.url, onChange = frameOptions.onChange;
    var contextId = (controlOptions || {}).contextId;
    if (!url) {
        var message = 'Url is required for the experience';
        onChange === null || onChange === void 0 ? void 0 : onChange({
            eventName: enums_1.ChangeEventName.NO_URL,
            eventLevel: enums_1.ChangeEventLevel.ERROR,
            message: message
        }, { frame: null });
        throw new Error(message);
    }
    var experienceFromUrl = (0, _1.extractQSearchExperienceFromUrl)(url);
    if (!experienceFromUrl) {
        onChange === null || onChange === void 0 ? void 0 : onChange({
            eventName: enums_1.ChangeEventName.INVALID_URL,
            eventLevel: enums_1.ChangeEventLevel.ERROR,
            message: 'Invalid q search experience url',
            data: {
                url: url
            }
        }, { frame: null });
        throw new Error('Invalid q search experience url');
    }
    var _a = (0, commons_1.buildInternalExperienceInfo)(experienceFromUrl, allExperienceIdentifiers, contextId, _1.getQSearchExperienceIdentifier), experienceIdentifier = _a.experienceIdentifier, internalExperience = _a.internalExperience;
    var interceptMessage = function (messageEvent, metadata) {
        // Intercepting onMessage
        // if the resizeHeightOnSizeChangedEvent is true, upon receiving SIZE_CHANGED message, update the height of the iframe
        if (['Q_SEARCH_OPENED', 'Q_SEARCH_CLOSED'].includes(messageEvent.eventName)) {
            metadata.frame.style.height = "".concat(messageEvent.message.height, "px");
        }
        else if (messageEvent.eventName === enums_1.MessageEventName.CONTENT_LOADED) {
            window.addEventListener('click', function (event) {
                !experienceFrame.frame.contains(event.target) && _close();
            });
        }
    };
    // We add content options into the query string of the iframe url.
    // Some option names do not match option names that the static content expects
    // This function converts the property names to the query string parameters that the static content expects
    var transformContentOptions = function (contentOptions) {
        var hideIcon = contentOptions.hideIcon, hideTopicName = contentOptions.hideTopicName, theme = contentOptions.theme, allowTopicSelection = contentOptions.allowTopicSelection, onMessage = contentOptions.onMessage, unrecognizedContentOptions = __rest(contentOptions, ["hideIcon", "hideTopicName", "theme", "allowTopicSelection", "onMessage"]);
        var unrecognizedContentOptionNames = Object.keys(unrecognizedContentOptions);
        if (Object.keys(unrecognizedContentOptions).length > 0) {
            onChange === null || onChange === void 0 ? void 0 : onChange({
                eventName: enums_1.ChangeEventName.UNRECOGNIZED_CONTENT_OPTIONS,
                eventLevel: enums_1.ChangeEventLevel.WARN,
                message: 'Q search content options contain unrecognized properties',
                data: {
                    unrecognizedContentOptions: unrecognizedContentOptionNames
                }
            }, { frame: null });
            console.warn('Q search content options contain unrecognized properties');
        }
        var transformedContentOptions = {
            allowTopicSelection: allowTopicSelection,
            onMessage: onMessage
        };
        if (hideIcon !== undefined) {
            transformedContentOptions.qBarIconDisabled = hideIcon;
        }
        if (hideTopicName !== undefined) {
            transformedContentOptions.qBarTopicNameDisabled = hideTopicName;
        }
        if (theme !== undefined) {
            transformedContentOptions.themeId = theme;
        }
        return transformedContentOptions;
    };
    var experienceFrame = (0, createExperienceFrame_1["default"])(frameOptions, transformContentOptions(contentOptions), controlOptions, internalExperience, experienceIdentifier, interceptMessage);
    var _send = function (messageEvent) { return __awaiter(void 0, void 0, void 0, function () {
        var targetedMessageEvent, messageResponse;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    targetedMessageEvent = __assign(__assign({}, messageEvent), { eventTarget: internalExperience });
                    return [4 /*yield*/, experienceFrame.internalSend(targetedMessageEvent)];
                case 1:
                    messageResponse = _a.sent();
                    return [2 /*return*/, messageResponse];
            }
        });
    }); };
    var _setQuestion = function (question) { return __awaiter(void 0, void 0, void 0, function () {
        return __generator(this, function (_a) {
            return [2 /*return*/, _send({
                    eventName: enums_1.MessageEventName.SET_Q_SEARCH_QUESTION,
                    message: {
                        question: question
                    }
                })];
        });
    }); };
    var _close = function () {
        return _send({
            eventName: enums_1.MessageEventName.CLOSE_Q_SEARCH
        });
    };
    return {
        setQuestion: _setQuestion,
        close: _close,
        send: _send,
        addEventListener: experienceFrame.internalAddEventListener
    };
};
exports["default"] = createQSearchFrame;
