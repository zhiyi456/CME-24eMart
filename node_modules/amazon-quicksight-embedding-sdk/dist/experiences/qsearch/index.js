"use strict";
// Copyright 2022 Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
exports.__esModule = true;
exports.isQSearchExperience = exports.getQSearchExperienceIdentifier = exports.extractQSearchExperienceFromUrl = exports.createQSearchFrame = void 0;
var enums_1 = require("../../enums");
var createQSearchFrame_1 = __importDefault(require("./createQSearchFrame"));
exports.createQSearchFrame = createQSearchFrame_1["default"];
var isQSearchExperience = function (experience) {
    return !!experience && experience.experienceType === enums_1.ExperienceType.QSEARCH;
};
exports.isQSearchExperience = isQSearchExperience;
var extractQSearchExperienceFromUrl = function (url) {
    var matches = /^https:\/\/[^/]+\/embedding\/[^/]+\/q\/search(\/|\?|$)/i.exec(url) || [];
    if (matches.length < 2) {
        return;
    }
    return {
        experienceType: enums_1.ExperienceType.QSEARCH
    };
};
exports.extractQSearchExperienceFromUrl = extractQSearchExperienceFromUrl;
var getQSearchExperienceIdentifier = function (experience) {
    if (!isQSearchExperience(experience)) {
        return;
    }
    var contextId = experience.contextId, experienceType = experience.experienceType, discriminator = experience.discriminator;
    return [contextId, experienceType, discriminator].filter(Boolean).join('-');
};
exports.getQSearchExperienceIdentifier = getQSearchExperienceIdentifier;
